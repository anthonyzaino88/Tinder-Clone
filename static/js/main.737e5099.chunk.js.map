{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA2BeA,MArBf,WACE,OACE,sBAAKC,UAAU,SAAf,UAEE,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,kBAGvC,qBACEA,UAAU,cACVG,IAAI,4FACJC,IAAI,KAGN,cAACH,EAAA,EAAD,UACA,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,sB,kECd7BK,E,OALEC,EAAMC,OAAO,CAC5BC,QAAS,4CCqDIC,MAnDf,WACI,MAA4BC,mBAAU,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAwBF,OAtBEC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACoBR,EAAMS,IAAI,iBAD9B,OACQC,EADR,OAGEJ,EAAUI,EAAIC,MAHhB,4CADc,uBAAC,WAAD,wBAOZC,KACD,IAeH,qBAAKlB,UAAU,cAAf,SACE,qBAAKA,UAAU,6BAAf,SACGW,EAAOQ,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CACEpB,UAAU,QAEVqB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAlBSC,EAkBYJ,EAAOK,UAjB3CC,QAAQC,IAAI,WAAaH,GADb,IAAYA,GAmBlBI,iBAAkB,kBAdNH,EAcuBL,EAAOK,UAbhDC,QAAQC,IAAIF,EAAO,qBADF,IAACA,GASd,SAQI,qBACEI,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAOW,OAAhB,MACxB/B,UAAU,OAFZ,SAII,6BAAKoB,EAAOK,UAVbL,EAAOK,c,6FCLTO,MAtBf,WACE,OACE,sBAAKhC,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACE,cAAC,IAAD,CAAYE,SAAS,YAEvB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAWE,SAAS,YAEtB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACE,cAAC,IAAD,CAAcE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACE,cAAC,IAAD,CAAaE,SAAS,gBCRf+B,MAXf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACJ,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.737e5099.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className='header'>\r\n\r\n      <IconButton>\r\n      <PersonIcon fontSize=\"large\" className=\"header_icon\" />\r\n      </IconButton>\r\n\r\n      <img\r\n        className=\"header_logo\"\r\n        src=\"https://th.bing.com/th/id/Reab202f2fa37cbfab6572c10067511ff?rik=eg5t0SQWrqIshg&pid=ImgRaw\"\r\n        alt=\"\"\r\n      />\r\n\r\n      <IconButton>\r\n      <ForumIcon fontSize=\"large\" className=\"header_icon\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://tin-backend-clone.herokuapp.com\",\r\n\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TinderCard from \"react-tinder-card\";\r\nimport './TinderCards.css';\r\nimport axios from './axios';\r\n\r\nfunction TinderCards() {\r\n    const [people, setPeople] = useState ([]);\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const req = await axios.get(\"/tinder/cards\");\r\n\r\n        setPeople(req.data);\r\n      }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n    const swiped =(direction, nameToDelete) => {\r\n      console.log(\"removing\" + nameToDelete);\r\n\r\n    };\r\n\r\n    const outOfFrame = (name) => {\r\n      console.log(name + \" left the screen!\");\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"tinderCards\">\r\n      <div className=\"tinderCards__cardContainer\">\r\n        {people.map((person) =>(\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\", \"down\"]}\r\n            onSwipe={(dir) => swiped(dir, person.name)}\r\n            onCardLeftScreen={() => outOfFrame(person.name)}\r\n          >\r\n\r\n              <div\r\n                style={{ backgroundImage: `url(${person.imgUrl})` }}\r\n                className=\"card\"\r\n                >\r\n                  <h3>{person.name}</h3>\r\n              </div>\r\n\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport \"./SwipeButtons.css\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction SwipeButtons() {\r\n  return (\r\n    <div className=\"swipeButtons\">\r\n      <IconButton className=\"swipeButtons__repeat\">\r\n        <ReplayIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__left\">\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__star\">\r\n        <StarRateIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__right\">\r\n        <FavoriteIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__lightning\">\r\n        <FlashOnIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n<Header />\n<TinderCards />\n<SwipeButtons />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}